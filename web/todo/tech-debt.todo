Code:
  ☐ Combine all the supabase channel subscriptions to one place and sub there and connect it to svelte store
  ☐ Remove empty files
  ✔ Remove too many relative parent folder in import statement `../../../../../Component` @done(24-05-26 00:23)
  ✔ Convert all the svg icons and move to `$lib/component/icon` @done(24-05-26 00:23)

Design:
  ☐ Update pixel perfect setup and design it in figma
  ☐ Update the figma design with proper white space and universal font-size
  ☐ Use that to remove duplicate buttons and input designs across the app
  ☐ Sidebar
    ☐ Remove unwanted sidebar, keep only sidebar that we will release before the prototype
    ☐ Rethink the sidebar so, backstage / stage area is easy to use.

Test:
  ☐ Add full complete test using playwright
  ☐ Setup database test seed

GOOD PRACTICE:
  ☐ Make sure all the `throw redirect(300, "/")` contains the unique error message `throw redirect(300, '/error=ERROR_UNIQUE')`

Re-Write:
  ☐ Auth flow use backend-form
    One issue, I dont want the password to be sent through network. That is not something i like,
    I am fine with the current setup, Will need to rethink this later

Security:
  ☐ User can navigate to different profile via client rendering void that
  ☐ Prevent user to change the email
  https://github.com/orgs/supabase/discussions/656

  
Svelte V5:
  ✔ Remove on:click @done(24-05-25 22:52)
  ☐ Avoide using svelte store?
  slot
Optimization:
  ☐ Have a field `username` in the `live_debate` table. so, we don't need to keep looking for `*, host(*)` in the select statement
    ☐ Don't let the user to change their username during the live stream
    ```ts
      const username = params.username;
      if (!username) throw redirect(303, "/?error=INVALID_USERID");
      
      const { data, error } = await supabase.from("live_debate").select(", host(*)").eq("host.username", username)
  ```

  ☐ Add Index optimization for all the slow query
  
