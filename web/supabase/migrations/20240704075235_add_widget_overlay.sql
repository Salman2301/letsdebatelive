alter table "public"."live_widget_background" alter column "widget_type" drop default;

alter table "public"."live_widget_logo" alter column "widget_type" drop default;

alter table "public"."live_widget_running_text" alter column "widget_type" drop default;

alter table "public"."live_widget_watermark" alter column "widget_type" drop default;

alter table "public"."user_asset" alter column "type" drop default;

alter type "public"."asset_type" rename to "asset_type__old_version_to_be_dropped";

create type "public"."asset_type" as enum ('image', 'video', 'background', 'frame', 'logo', 'watermark', 'overlay');

alter type "public"."widget_type" rename to "widget_type__old_version_to_be_dropped";

create type "public"."widget_type" as enum ('background', 'watermark', 'logo', 'alert', 'running_text', 'sounds_board', 'overlay');

create table "public"."live_widget_overlay" (
    "created_at" timestamp with time zone not null default now(),
    "live_feed" uuid not null,
    "widget_type" widget_type not null default 'overlay'::widget_type,
    "pos_x" smallint not null,
    "pos_y" smallint not null,
    "asset_type" text,
    "asset" uuid not null,
    "sort" smallint generated by default as identity not null
);


alter table "public"."live_widget_overlay" enable row level security;

alter table "public"."live_widget" alter column widget_type type "public"."widget_type" using widget_type::text::"public"."widget_type";

alter table "public"."live_widget_background" alter column widget_type type "public"."widget_type" using widget_type::text::"public"."widget_type";

alter table "public"."live_widget_logo" alter column widget_type type "public"."widget_type" using widget_type::text::"public"."widget_type";

alter table "public"."live_widget_running_text" alter column widget_type type "public"."widget_type" using widget_type::text::"public"."widget_type";

alter table "public"."live_widget_watermark" alter column widget_type type "public"."widget_type" using widget_type::text::"public"."widget_type";

alter table "public"."user_asset" alter column type type "public"."asset_type" using type::text::"public"."asset_type";

alter table "public"."live_widget_background" alter column "widget_type" set default 'background'::widget_type;

alter table "public"."live_widget_logo" alter column "widget_type" set default 'logo'::widget_type;

alter table "public"."live_widget_running_text" alter column "widget_type" set default 'running_text'::widget_type;

alter table "public"."live_widget_watermark" alter column "widget_type" set default 'watermark'::widget_type;

alter table "public"."user_asset" alter column "type" set default 'image'::asset_type;

drop type "public"."asset_type__old_version_to_be_dropped";

drop type "public"."widget_type__old_version_to_be_dropped";

CREATE UNIQUE INDEX live_widget_overlay_pkey ON public.live_widget_overlay USING btree (live_feed, widget_type, sort);

alter table "public"."live_widget_overlay" add constraint "live_widget_overlay_pkey" PRIMARY KEY using index "live_widget_overlay_pkey";

alter table "public"."live_widget_overlay" add constraint "live_widget_overlay_asset_fkey" FOREIGN KEY (asset) REFERENCES user_asset(id) not valid;

alter table "public"."live_widget_overlay" validate constraint "live_widget_overlay_asset_fkey";

alter table "public"."live_widget_overlay" add constraint "live_widget_overlay_live_feed_fkey" FOREIGN KEY (live_feed) REFERENCES live_feed(id) not valid;

alter table "public"."live_widget_overlay" validate constraint "live_widget_overlay_live_feed_fkey";

grant delete on table "public"."live_widget_overlay" to "anon";

grant insert on table "public"."live_widget_overlay" to "anon";

grant references on table "public"."live_widget_overlay" to "anon";

grant select on table "public"."live_widget_overlay" to "anon";

grant trigger on table "public"."live_widget_overlay" to "anon";

grant truncate on table "public"."live_widget_overlay" to "anon";

grant update on table "public"."live_widget_overlay" to "anon";

grant delete on table "public"."live_widget_overlay" to "authenticated";

grant insert on table "public"."live_widget_overlay" to "authenticated";

grant references on table "public"."live_widget_overlay" to "authenticated";

grant select on table "public"."live_widget_overlay" to "authenticated";

grant trigger on table "public"."live_widget_overlay" to "authenticated";

grant truncate on table "public"."live_widget_overlay" to "authenticated";

grant update on table "public"."live_widget_overlay" to "authenticated";

grant delete on table "public"."live_widget_overlay" to "service_role";

grant insert on table "public"."live_widget_overlay" to "service_role";

grant references on table "public"."live_widget_overlay" to "service_role";

grant select on table "public"."live_widget_overlay" to "service_role";

grant trigger on table "public"."live_widget_overlay" to "service_role";

grant truncate on table "public"."live_widget_overlay" to "service_role";

grant update on table "public"."live_widget_overlay" to "service_role";

create policy "Anyone can see"
on "public"."live_widget_overlay"
as permissive
for select
to public
using (true);


create policy "User atleast cohost delete"
on "public"."live_widget_overlay"
as permissive
for delete
to authenticated
using (user_atleast_co_host(live_feed));


create policy "User atleast cohost insert"
on "public"."live_widget_overlay"
as permissive
for insert
to authenticated
with check (user_atleast_co_host(live_feed));


create policy "User atleast cohost update"
on "public"."live_widget_overlay"
as permissive
for update
to authenticated
using (user_atleast_co_host(live_feed));



